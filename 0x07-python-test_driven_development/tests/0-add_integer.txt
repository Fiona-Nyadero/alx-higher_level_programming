
'0-add_integer' module

Unit test for the function  'add_integer'

Import the function:

    >>> add_integer = __import__('0-add_integer').add_integer

The tests:

    >>> add_integer(1, 5)
    6

    >>> add_integer(1, 7.8)
    8

    >>> add_integer(4)
    102

    >>> add_integer(5, -2)
    3

    >>> add_integer(-6, -1)
    -7

    >>> add_integer(14.1, 3.0)
    17

    >>> add_integer(4, "3")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(4, "Cool")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'
